pdi:
  metadata:
    pcoord_1d: int
    pcoord: { type: array, subtype: int, size: 2 }
    psize: { type: array, subtype: int, size: 2 }
    dsize: { type: array, subtype: int, size: 2 }
    MaxtimeSteps: int
    timestep: int
  data:
    local_t:
      type: array
      subtype: double
      size: ['$dsize[0]', '$dsize[1]']
      subsize: ['$dsize[0] - 2', '$dsize[1] - 2']
      start: [1, 1]
    local_v:
      type: array
      subtype: double
      size: ['$dsize[0]', '$dsize[1]']
      subsize: ['$dsize[0] - 2', '$dsize[1] - 2']
      start: [1, 1]
  plugins:
    mpi: # to get size and rank without sharing, i may use them for choosing the workers
    serialize:
      local_t: local_t_serialized
      local_v: local_v_serialized
    deisa:
      scheduler_info: scheduler.json
      init_on: init # have to call it after sharing the needed metadata :)
      time_step: $timestep # need a key word because i'll need this to create the key, and I don't know how the user will call it
      deisa_arrays: # those are my deisa virtual arrays
        #global_t: # that's the name that i will send to dask
         # type: array
         # subtype: double
         # size: [$MaxtimeSteps, '($dsize[0] - 2) * $psize[0]', '($dsize[1] - 2) * $psize[1]']
         # subsize: [1, '$dsize[0] - 2', '$dsize[1] - 2'] # that's how it's chunked, the size of each chunk
         # start: [$timestep, '($dsize[0] - 2) * $pcoord[0]', '($dsize[1] - 2) * $pcoord[1]'] # that's where each chunk will start
         # +timedim: 0 # a tag for the time dim, only this configuration is supported for the moment 
        global_v: # that's the name that i will send to dask
          type: array
          subtype: double
          size: [$MaxtimeSteps, '($dsize[0] - 2) * $psize[0]', '($dsize[1] - 2) * $psize[1]']
          subsize: [1, '$dsize[0] - 2', '$dsize[1] - 2'] # that's how it's chunked, the size of each chunk
          start: [$timestep, '($dsize[0] - 2) * $pcoord[0]', '($dsize[1] - 2) * $pcoord[1]'] # that's where each chunk will start
          +timedim: 0 # a tag for the time dim, only this configuration is supported for the moment 
      map_in: # which local data will be mapped to which deisa array
        #local_t_serialized: global_t
        local_v_serialized: global_v
